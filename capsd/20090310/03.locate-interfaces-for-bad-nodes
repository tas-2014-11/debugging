#!/usr/bin/perl

use strict;

#31|10.13.16.118|65540|10.13.16.118|M|1|2009-02-27 03:27:22.006+00|S|654

my $n = {};

sub slurp_bad_nodeids {
	while(<>) {
		chomp;
		my ($count,$nodeid) = split;
		$n->{$nodeid} = $nodeid;
	}
	my @n = sort {$a <=> $b} keys %$n;
	#print join("\n",@n);
}

my @fields = qw/nodeid ipaddr ifindex iphostname ismanaged
		ipstatus iplastcapsdpoll issnmpprimary id/;

sub parse_one_ipinterface {
	my $line = shift;
	my @a = split(/\|/,$line);

	my $href = {};
	my $i = 0;
	foreach(@fields) {
		my $value = $a[$i];
		$value = "" unless(defined($value));
		$href->{$_} = $value;
		++$i;
	}
	$href;
}

sub slurp_ipinterface {
	my $filename = "ipinterface.txt";
	my $pk_field = "id";

	my $table = {};
	open(my $in,"<$filename") || die("open($filename): $!");
	while(<$in>) {
		chomp;
		my $row = parse_one_ipinterface($_);
		my $key = $row->{$pk_field};
		$table->{$key} = $row;
	}
	close(in);
	$table;
}

sub dump_hash_of_hashes {
	my $h = shift;
	my $keys = shift;
	foreach(sort keys(%$h)) {
		dump_hash($h->{$_});
	}
}

sub dump_hash {
	my $h = shift;
	my $keys = shift;
	my $separator = "";

	#print "keys=$keys\n";

	my @keys = sort keys(%$h);
	$keys = \@keys unless(defined($keys));

	#print "keys=$keys\n";
	#print "keys=@$keys\n";

	foreach(@$keys) {
		print "$separator";
		#print "$_=$h->{$_}";
		print "$h->{$_}";
		$separator = "|";
	}
	print "\n";
}

my $ipinterface = {};

sub locate_ipinterfaces_for_nodes {
	foreach my $h (values %$ipinterface) {
		my $nodeid = $h->{nodeid};
		if(defined($n->{$nodeid})) {
			dump_hash($h,\@fields);
		}
	}
}

sub main {
	slurp_bad_nodeids;
	$ipinterface = slurp_ipinterface;
	#dump_hash_of_hashes($ipinterface);

	locate_ipinterfaces_for_nodes;
}

main;

my $doc = qw/
    ID              integer not null primary key default NEXTVAL( 'ipinterface_seq'),
    nodeID          integer not null,
            constraint fk_nodeID1 foreign key (nodeID) references node ON DELETE CASCADE,
    ipAddr          varchar(16) not null,
    ifIndex         integer,
    ipHostname      varchar(256),
    isManaged       char(1),
    ipStatus        integer,
    ipLastCapsdPoll     timestamp with time zone,
    isSnmpPrimary           char(1)
/;
